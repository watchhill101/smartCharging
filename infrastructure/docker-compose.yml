version: '3.8'

services:
  # MongoDB数据库
  mongodb:
    image: mongo:7.0
    container_name: smartcharging-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: smart_charging
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongodb/init:/docker-entrypoint-initdb.d
    networks:
      - smartcharging-network

  # Redis缓存
  redis:
    image: redis:7.2-alpine
    container_name: smartcharging-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass redis123
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - smartcharging-network

  # 主服务 (Node.js)
  backend:
    build:
      context: ../backEnd
      dockerfile: Dockerfile
    container_name: smartcharging-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 8080
      API_BASE_URL: http://localhost:8080/api
      FRONTEND_URL: http://localhost:3000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/smart_charging?authSource=admin
      REDIS_URL: redis://:redis123@redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      JWT_REFRESH_SECRET: your-super-secret-refresh-jwt-key-change-this-in-production
      JWT_EXPIRES_IN: 24h
      JWT_REFRESH_EXPIRES_IN: 7d
      # Alipay Configuration
      ALIPAY_APP_ID: 9021000122671080
      ALIPAY_PRIVATE_KEY: your-alipay-private-key
      ALIPAY_PUBLIC_KEY: your-alipay-public-key
      ALIPAY_GATEWAY_URL: https://openapi-sandbox.dl.alipaydev.com/gateway.do
      # Amap API Key
      AMAP_API_KEY: a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6
      # Face Verification API Configuration
      CLOUDMERSIVE_API_KEY: 5932bafd-7ce9-4169-812e-900a78b5d21a
      FACE_VERIFICATION_ENABLED: "true"
      FACE_VERIFICATION_TIMEOUT: "30000"
      FACE_VERIFICATION_MAX_ATTEMPTS: "3"
      # File Upload Configuration
      MAX_FILE_SIZE: 10MB
      UPLOAD_DIR: ./uploads
      AVATAR_BASE_URL: http://localhost:8080/uploads
      AVATAR_MAX_SIZE: 5242880
      AVATAR_ALLOWED_TYPES: image/jpeg,image/png,image/gif
      # CORS Configuration
      CORS_ORIGINS: http://localhost:3000,http://localhost:8080,https://api.smartcharging.com
      CORS_METHODS: GET,POST,PUT,DELETE,OPTIONS
      CORS_CREDENTIALS: true
      # WebSocket Configuration
      WEBSOCKET_ORIGINS: http://localhost:3000,http://localhost:8080,https://api.smartcharging.com
      WEBSOCKET_PING_TIMEOUT: 60000
      WEBSOCKET_PING_INTERVAL: 25000
      # Logging
      LOG_LEVEL: info
    ports:
      - "8080:8080"
    depends_on:
      - mongodb
      - redis
    volumes:
      - ../backEnd:/app
      - /app/node_modules
      - backend_uploads:/app/uploads
    networks:
      - smartcharging-network

  # 充电服务 (Python)
  charging-service:
    build:
      context: ../chargingService
      dockerfile: Dockerfile
    container_name: smartcharging-charging-service
    restart: unless-stopped
    environment:
      CHARGING_SERVICE_PORT: 8000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/smart_charging?authSource=admin
      REDIS_URL: redis://:redis123@redis:6379
      OCPP_VERSION: 1.6
      HEARTBEAT_INTERVAL: 300
      METER_VALUES_INTERVAL: 60
    ports:
      - "8000:8000"
    depends_on:
      - mongodb
      - redis
    volumes:
      - ../backEnd/charging-service:/app
    networks:
      - smartcharging-network

  # Nginx反向代理
  nginx:
    image: nginx:1.25-alpine
    container_name: smartcharging-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/ssl
      - nginx_logs:/var/log/nginx
    depends_on:
      - backend
      - charging-service
    networks:
      - smartcharging-network

  # 监控服务 (可选)
  prometheus:
    image: prom/prometheus:latest
    container_name: smartcharging-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - smartcharging-network

  grafana:
    image: grafana/grafana:latest
    container_name: smartcharging-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin123
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - smartcharging-network

volumes:
  mongodb_data:
  redis_data:
  prometheus_data:
  grafana_data:
  nginx_logs:
  backend_uploads:

networks:
  smartcharging-network:
    driver: bridge